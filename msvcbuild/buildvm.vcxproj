<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="..\LuaJIT\src\host\buildvm.c" />
    <ClCompile Include="..\LuaJIT\src\host\buildvm_asm.c" />
    <ClCompile Include="..\LuaJIT\src\host\buildvm_fold.c" />
    <ClCompile Include="..\LuaJIT\src\host\buildvm_lib.c" />
    <ClCompile Include="..\LuaJIT\src\host\buildvm_peobj.c" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\LuaJIT\src\host\buildvm.h" />
    <ClInclude Include="..\LuaJIT\src\host\buildvm_libbc.h" />
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{825B1FEA-EA80-41FC-94CD-6C30041D8457}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>buildvm</RootNamespace>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <LinkIncremental>true</LinkIncremental>
    <IncludePath>$(SolutionDir)..\luajit\src;$(IncludePath)</IncludePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
    <IncludePath>$(SolutionDir)..\luajit\src;$(IncludePath)</IncludePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <LinkIncremental>false</LinkIncremental>
    <IncludePath>$(SolutionDir)..\luajit\src;$(IncludePath)</IncludePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
    <IncludePath>$(SolutionDir)..\luajit\src;$(IncludePath)</IncludePath>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;_LIB;_CRT_SECURE_NO_DEPRECATE;_CRT_STDIO_INLINE=__declspec(dllexport)__inline;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <CompileAs>CompileAsC</CompileAs>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <PreBuildEvent>
      <Command>$(OutDir)minilua.exe $(SolutionDir)../luajit/dynasm/dynasm.lua -LN -D WIN -D JIT -D FFI -o $(SolutionDir)../luajit/src/host/buildvm_arch.h $(SolutionDir)../luajit/src/vm_x86.dasc</Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>@setlocal  
cd /d $(SolutionDir)..\luajit\src  
@set ALL_LIB=lib_base.c lib_math.c lib_bit.c lib_string.c lib_table.c lib_io.c lib_os.c lib_package.c lib_debug.c lib_jit.c lib_ffi.c
$(OutDir)buildvm.exe -m peobj -o   $(OutDir)lj_vm.obj   
$(OutDir)buildvm.exe -m bcdef -o   $(SolutionDir)..\luajit\src\lj_bcdef.h %ALL_LIB%  
$(OutDir)buildvm.exe -m ffdef -o   $(SolutionDir)..\luajit\src\lj_ffdef.h %ALL_LIB%  
$(OutDir)buildvm.exe -m libdef -o  $(SolutionDir)..\luajit\src\lj_libdef.h %ALL_LIB%  
$(OutDir)buildvm.exe -m recdef -o  $(SolutionDir)..\luajit\src\lj_recdef.h %ALL_LIB%  
$(OutDir)buildvm.exe -m vmdef -o   $(SolutionDir)..\luajit\src\jit\vmdef.lua %ALL_LIB%   
$(OutDir)buildvm.exe -m folddef -o $(SolutionDir)..\luajit\src\lj_folddef.h lj_opt_fold.c  
@endlocal</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;_LIB;_CRT_SECURE_NO_DEPRECATE;_CRT_STDIO_INLINE=__declspec(dllexport)__inline;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <CompileAs>CompileAsC</CompileAs>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <PreBuildEvent>
      <Command>$(OutDir)minilua.exe $(SolutionDir)../luajit/dynasm/dynasm.lua -LN -D WIN -D JIT -D FFI -o $(SolutionDir)../luajit/src/host/buildvm_arch.h $(SolutionDir)../luajit/src/vm_x86.dasc</Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>@setlocal  
cd /d $(SolutionDir)..\luajit\src  
@set ALL_LIB=lib_base.c lib_math.c lib_bit.c lib_string.c lib_table.c lib_io.c lib_os.c lib_package.c lib_debug.c lib_jit.c lib_ffi.c
$(OutDir)buildvm.exe -m peobj -o   $(OutDir)lj_vm.obj   
$(OutDir)buildvm.exe -m bcdef -o   $(SolutionDir)..\luajit\src\lj_bcdef.h %ALL_LIB%  
$(OutDir)buildvm.exe -m ffdef -o   $(SolutionDir)..\luajit\src\lj_ffdef.h %ALL_LIB%  
$(OutDir)buildvm.exe -m libdef -o  $(SolutionDir)..\luajit\src\lj_libdef.h %ALL_LIB%  
$(OutDir)buildvm.exe -m recdef -o  $(SolutionDir)..\luajit\src\lj_recdef.h %ALL_LIB%  
$(OutDir)buildvm.exe -m vmdef -o   $(SolutionDir)..\luajit\src\jit\vmdef.lua %ALL_LIB%   
$(OutDir)buildvm.exe -m folddef -o $(SolutionDir)..\luajit\src\lj_folddef.h lj_opt_fold.c  
@endlocal</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;_LIB;_CRT_SECURE_NO_DEPRECATE;_CRT_STDIO_INLINE=__declspec(dllexport)__inline;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <CompileAs>CompileAsC</CompileAs>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <PreBuildEvent>
      <Command>$(OutDir)minilua.exe $(SolutionDir)../luajit/dynasm/dynasm.lua -LN -D WIN -D JIT -D FFI -o $(SolutionDir)../luajit/src/host/buildvm_arch.h $(SolutionDir)../luajit/src/vm_x86.dasc</Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>@setlocal  
cd /d $(SolutionDir)..\luajit\src  
@set ALL_LIB=lib_base.c lib_math.c lib_bit.c lib_string.c lib_table.c lib_io.c lib_os.c lib_package.c lib_debug.c lib_jit.c lib_ffi.c
$(OutDir)buildvm.exe -m peobj -o   $(OutDir)lj_vm.obj   
$(OutDir)buildvm.exe -m bcdef -o   $(SolutionDir)..\luajit\src\lj_bcdef.h %ALL_LIB%  
$(OutDir)buildvm.exe -m ffdef -o   $(SolutionDir)..\luajit\src\lj_ffdef.h %ALL_LIB%  
$(OutDir)buildvm.exe -m libdef -o  $(SolutionDir)..\luajit\src\lj_libdef.h %ALL_LIB%  
$(OutDir)buildvm.exe -m recdef -o  $(SolutionDir)..\luajit\src\lj_recdef.h %ALL_LIB%  
$(OutDir)buildvm.exe -m vmdef -o   $(SolutionDir)..\luajit\src\jit\vmdef.lua %ALL_LIB%   
$(OutDir)buildvm.exe -m folddef -o $(SolutionDir)..\luajit\src\lj_folddef.h lj_opt_fold.c  
@endlocal</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;_LIB;_CRT_SECURE_NO_DEPRECATE;_CRT_STDIO_INLINE=__declspec(dllexport)__inline;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <CompileAs>CompileAsC</CompileAs>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <PreBuildEvent>
      <Command>$(OutDir)minilua.exe $(SolutionDir)../luajit/dynasm/dynasm.lua -LN -D WIN -D JIT -D FFI -o $(SolutionDir)../luajit/src/host/buildvm_arch.h $(SolutionDir)../luajit/src/vm_x86.dasc</Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>@setlocal  
cd /d $(SolutionDir)..\luajit\src  
@set ALL_LIB=lib_base.c lib_math.c lib_bit.c lib_string.c lib_table.c lib_io.c lib_os.c lib_package.c lib_debug.c lib_jit.c lib_ffi.c
$(OutDir)buildvm.exe -m peobj -o   $(OutDir)lj_vm.obj   
$(OutDir)buildvm.exe -m bcdef -o   $(SolutionDir)..\luajit\src\lj_bcdef.h %ALL_LIB%  
$(OutDir)buildvm.exe -m ffdef -o   $(SolutionDir)..\luajit\src\lj_ffdef.h %ALL_LIB%  
$(OutDir)buildvm.exe -m libdef -o  $(SolutionDir)..\luajit\src\lj_libdef.h %ALL_LIB%  
$(OutDir)buildvm.exe -m recdef -o  $(SolutionDir)..\luajit\src\lj_recdef.h %ALL_LIB%  
$(OutDir)buildvm.exe -m vmdef -o   $(SolutionDir)..\luajit\src\jit\vmdef.lua %ALL_LIB%   
$(OutDir)buildvm.exe -m folddef -o $(SolutionDir)..\luajit\src\lj_folddef.h lj_opt_fold.c  
@endlocal</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>